// Copyright 2023-2024 DreamWorks Animation LLC
// SPDX-License-Identifier: Apache-2.0

//
//
#include "TileExtrapolation.h"

#include <algorithm>
#include <iomanip>
#include <iostream>
#include <sstream>

namespace scene_rdl2 {
namespace fb_util {

//
// This is a pregenerated table for active nearest pixel search mask for 8x8 pixels tile.
//
// Followings are some example of masks at (2, 2) position with maskId 0 ~ 8 out of 20.
// maskId:0 is pixel itself. maskId:1 is closest pixels from position(2,2),
// maskId:2 is next closest pixels of maskId:1, and so on.
//
// If we have active pixel mask, and using pixelSearchMask from maskId 0 to max order
// (in this pixel position, max = 20), we can pretty easy to find nearest active pixel by
//
//     if (activePixelMask & searchPixelMask) return true
//
// (See more detail for code of TileExtrapolation::searchActiveNearestPixelMain_maskBundle1())
//
// Each pixel position has different searach mask patterns and total mask count.
//
//  x:2 y:2 maskId:0            x:2 y:2 maskId:1            x:2 y:2 maskId:2
//  mask 0x0000000000040000 {   mask 0x00000000040a0400 {   mask 0x000000000a000a00 {
//     .  .  .  .  .  .  .  .      .  .  .  .  .  .  .  .      .  .  .  .  .  .  .  .
//     .  .  .  .  .  .  .  .      .  .  .  .  .  .  .  .      .  .  .  .  .  .  .  .
//     .  .  .  .  .  .  .  .      .  .  .  .  .  .  .  .      .  .  .  .  .  .  .  .
//     .  .  .  .  .  .  .  .      .  .  .  .  .  .  .  .      .  .  .  .  .  .  .  .
//     .  .  .  .  .  .  .  .      .  . 32  .  .  .  .  .      . 31  . 33  .  .  .  .
//     .  . 22  .  .  .  .  .      . 21  . 23  .  .  .  .      .  .  .  .  .  .  .  .
//     .  .  .  .  .  .  .  .      .  . 12  .  .  .  .  .      . 11  . 13  .  .  .  .
//     .  .  .  .  .  .  .  .      .  .  .  .  .  .  .  .      .  .  .  .  .  .  .  .
//  }                           }                           }
//
//  x:2 y:2 maskId:3            x:2 y:2 maskId:4            x:2 y:2 maskId:5
//  mask 0x0000000400110004 {   mask 0x0000000a1100110a {   mask 0x0000001100000011 {
//     .  .  .  .  .  .  .  .      .  .  .  .  .  .  .  .      .  .  .  .  .  .  .  .
//     .  .  .  .  .  .  .  .      .  .  .  .  .  .  .  .      .  .  .  .  .  .  .  .
//     .  .  .  .  .  .  .  .      .  .  .  .  .  .  .  .      .  .  .  .  .  .  .  .
//     .  . 42  .  .  .  .  .      . 41  . 43  .  .  .  .     40  .  .  . 44  .  .  .
//     .  .  .  .  .  .  .  .     30  .  .  . 34  .  .  .      .  .  .  .  .  .  .  .
//    20  .  .  . 24  .  .  .      .  .  .  .  .  .  .  .      .  .  .  .  .  .  .  .
//     .  .  .  .  .  .  .  .     10  .  .  . 14  .  .  .      .  .  .  .  .  .  .  .
//     .  . 02  .  .  .  .  .      . 01  . 03  .  .  .  .     00  .  .  . 04  .  .  .
//  }                           }                           }
//
//  x:2 y:2 maskId:6            x:2 y:2 maskId:7            x:2 y:2 maskId:8
//  mask 0x0000040000200000 {   mask 0x00000a0020002000 {   mask 0x0000112000000020 {
//     .  .  .  .  .  .  .  .      .  .  .  .  .  .  .  .      .  .  .  .  .  .  .  .
//     .  .  .  .  .  .  .  .      .  .  .  .  .  .  .  .      .  .  .  .  .  .  .  .
//     .  . 52  .  .  .  .  .      . 51  . 53  .  .  .  .     50  .  .  . 54  .  .  .
//     .  .  .  .  .  .  .  .      .  .  .  .  .  .  .  .      .  .  .  .  . 45  .  .
//     .  .  .  .  .  .  .  .      .  .  .  .  . 35  .  .      .  .  .  .  .  .  .  .
//     .  .  .  .  . 25  .  .      .  .  .  .  .  .  .  .      .  .  .  .  .  .  .  .
//     .  .  .  .  .  .  .  .      .  .  .  .  . 15  .  .      .  .  .  .  .  .  .  .
//     .  .  .  .  .  .  .  .      .  .  .  .  .  .  .  .      .  .  .  .  . 05  .  .
//  }                           }                           }
//
//  This is a one of the result. Left is input active pixel pattern and right is extrapolate result.
//
//  3 active pixels             extrapolate result
//  mask 0x0002000000800002 {   extrapolatePixIdArray {
//     .  .  .  .  .  .  .  .     61 61 61 61 61 61 27 27
//     . 61  .  .  .  .  .  .     61 61 61 61 61 61 27 27
//     .  .  .  .  .  .  .  .     61 61 61 61 61 27 27 27
//     .  .  .  .  .  .  .  .     61 61 61 61 27 27 27 27
//     .  .  .  .  .  .  .  .      1  1  1  1 27 27 27 27
//     .  .  .  .  .  .  . 27      1  1  1  1 27 27 27 27
//     .  .  .  .  .  .  .  .      1  1  1  1  1 27 27 27
//     . 01  .  .  .  .  .  .      1  1  1  1  1 27 27 27
//  }                           }
//
// pixelSearchMask table is automatically generated by different small program which
// uses TileExtrapolationTile::makePrecomputeMaskTableCppHeader().
//
static const uint64_t pixelSearchMaskTotalId = 40;
static uint64_t pixelSearchMask[64][pixelSearchMaskTotalId + 1] = {
    { // x:0 y:0
        0x0000000000000001, 0x0000000000000102, 0x0000000000000200, 0x0000000000010004,
        0x0000000000020400, 0x0000000000040000, 0x0000000001000008, 0x0000000002000800,
        0x0000000004080000, 0x0000000100000010, 0x0000000200001000, 0x0000000008000000,
        0x0000000400100000, 0x0000010810000020, 0x0000020000002000, 0x0000040000200000,
        0x0000001000000000, 0x0000080020000000, 0x0001000000000040, 0x0002000000004000,
        0x0004000000400000, 0x0000102000000000, 0x0008000040000000, 0x0100000000000080,
        0x0200200000008000, 0x0010004000000000, 0x0400000000800000, 0x0800000080000000,
        0x0020400000000000, 0x1000008000000000, 0x0040000000000000, 0x2000800000000000,
        0x4080000000000000, 0x8000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        34 // pixelSearchMask total
    },
    { // x:1 y:0
        0x0000000000000002, 0x0000000000000205, 0x0000000000000500, 0x0000000000020008,
        0x0000000000050800, 0x0000000000080000, 0x0000000002000010, 0x0000000005001000,
        0x0000000008100000, 0x0000000200000020, 0x0000000500002000, 0x0000000010000000,
        0x0000000800200000, 0x0000021020000040, 0x0000050000004000, 0x0000080000400000,
        0x0000002000000000, 0x0000100040000000, 0x0002000000000080, 0x0005000000008000,
        0x0008000000800000, 0x0000204000000000, 0x0010000080000000, 0x0200000000000000,
        0x0500400000000000, 0x0020008000000000, 0x0800000000000000, 0x1000000000000000,
        0x0040800000000000, 0x2000000000000000, 0x0080000000000000, 0x4000000000000000,
        0x8000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        33 // pixelSearchMask total
    },
    { // x:2 y:0
        0x0000000000000004, 0x000000000000040a, 0x0000000000000a00, 0x0000000000040011,
        0x00000000000a1100, 0x0000000000110000, 0x0000000004000020, 0x000000000a002000,
        0x0000000011200000, 0x0000000400000040, 0x0000000a00004000, 0x0000000020000000,
        0x0000001100400000, 0x0000042040000080, 0x00000a0000008000, 0x0000110000800000,
        0x0000004000000000, 0x0000200080000000, 0x0004000000000000, 0x000a000000000000,
        0x0011000000000000, 0x0000408000000000, 0x0020000000000000, 0x0400000000000000,
        0x0a00800000000000, 0x0040000000000000, 0x1100000000000000, 0x2000000000000000,
        0x0080000000000000, 0x4000000000000000, 0x8000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        31 // pixelSearchMask total
    },
    { // x:3 y:0
        0x0000000000000008, 0x0000000000000814, 0x0000000000001400, 0x0000000000080022,
        0x0000000000142200, 0x0000000000220000, 0x0000000008000041, 0x0000000014004100,
        0x0000000022410000, 0x0000000800000080, 0x0000001400008000, 0x0000000041000000,
        0x0000002200800000, 0x0000084180000000, 0x0000140000000000, 0x0000220000000000,
        0x0000008000000000, 0x0000410000000000, 0x0008000000000000, 0x0014000000000000,
        0x0022000000000000, 0x0000800000000000, 0x0041000000000000, 0x0800000000000000,
        0x1400000000000000, 0x0080000000000000, 0x2200000000000000, 0x4100000000000000,
        0x8000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        29 // pixelSearchMask total
    },
    { // x:4 y:0
        0x0000000000000010, 0x0000000000001028, 0x0000000000002800, 0x0000000000100044,
        0x0000000000284400, 0x0000000000440000, 0x0000000010000082, 0x0000000028008200,
        0x0000000044820000, 0x0000001000000001, 0x0000002800000100, 0x0000000082000000,
        0x0000004400010000, 0x0000108201000000, 0x0000280000000000, 0x0000440000000000,
        0x0000000100000000, 0x0000820000000000, 0x0010000000000000, 0x0028000000000000,
        0x0044000000000000, 0x0000010000000000, 0x0082000000000000, 0x1000000000000000,
        0x2800000000000000, 0x0001000000000000, 0x4400000000000000, 0x8200000000000000,
        0x0100000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        29 // pixelSearchMask total
    },
    { // x:5 y:0
        0x0000000000000020, 0x0000000000002050, 0x0000000000005000, 0x0000000000200088,
        0x0000000000508800, 0x0000000000880000, 0x0000000020000004, 0x0000000050000400,
        0x0000000088040000, 0x0000002000000002, 0x0000005000000200, 0x0000000004000000,
        0x0000008800020000, 0x0000200402000001, 0x0000500000000100, 0x0000880000010000,
        0x0000000200000000, 0x0000040001000000, 0x0020000000000000, 0x0050000000000000,
        0x0088000000000000, 0x0000020100000000, 0x0004000000000000, 0x2000000000000000,
        0x5000010000000000, 0x0002000000000000, 0x8800000000000000, 0x0400000000000000,
        0x0001000000000000, 0x0200000000000000, 0x0100000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        31 // pixelSearchMask total
    },
    { // x:6 y:0
        0x0000000000000040, 0x00000000000040a0, 0x000000000000a000, 0x0000000000400010,
        0x0000000000a01000, 0x0000000000100000, 0x0000000040000008, 0x00000000a0000800,
        0x0000000010080000, 0x0000004000000004, 0x000000a000000400, 0x0000000008000000,
        0x0000001000040000, 0x0000400804000002, 0x0000a00000000200, 0x0000100000020000,
        0x0000000400000000, 0x0000080002000000, 0x0040000000000001, 0x00a0000000000100,
        0x0010000000010000, 0x0000040200000000, 0x0008000001000000, 0x4000000000000000,
        0xa000020000000000, 0x0004000100000000, 0x1000000000000000, 0x0800000000000000,
        0x0002010000000000, 0x0400000000000000, 0x0001000000000000, 0x0200000000000000,
        0x0100000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        33 // pixelSearchMask total
    },
    { // x:7 y:0
        0x0000000000000080, 0x0000000000008040, 0x0000000000004000, 0x0000000000800020,
        0x0000000000402000, 0x0000000000200000, 0x0000000080000010, 0x0000000040001000,
        0x0000000020100000, 0x0000008000000008, 0x0000004000000800, 0x0000000010000000,
        0x0000002000080000, 0x0000801008000004, 0x0000400000000400, 0x0000200000040000,
        0x0000000800000000, 0x0000100004000000, 0x0080000000000002, 0x0040000000000200,
        0x0020000000020000, 0x0000080400000000, 0x0010000002000000, 0x8000000000000001,
        0x4000040000000100, 0x0008000200000000, 0x2000000000010000, 0x1000000001000000,
        0x0004020000000000, 0x0800000100000000, 0x0002000000000000, 0x0400010000000000,
        0x0201000000000000, 0x0100000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        34 // pixelSearchMask total
    },
    { // x:0 y:1
        0x0000000000000100, 0x0000000000010201, 0x0000000000020002, 0x0000000001000400,
        0x0000000002040004, 0x0000000004000000, 0x0000000100000800, 0x0000000200080008,
        0x0000000408000000, 0x0000010000001000, 0x0000020000100010, 0x0000000800000000,
        0x0000040010000000, 0x0001081000002000, 0x0002000000200020, 0x0004000020000000,
        0x0000100000000000, 0x0008002000000000, 0x0100000000004000, 0x0200000000400040,
        0x0400000040000000, 0x0010200000000000, 0x0800004000000000, 0x0000000000008000,
        0x0020000000800080, 0x1000400000000000, 0x0000000080000000, 0x0000008000000000,
        0x2040000000000000, 0x0000800000000000, 0x4000000000000000, 0x0080000000000000,
        0x8000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        33 // pixelSearchMask total
    },
    { // x:1 y:1
        0x0000000000000200, 0x0000000000020502, 0x0000000000050005, 0x0000000002000800,
        0x0000000005080008, 0x0000000008000000, 0x0000000200001000, 0x0000000500100010,
        0x0000000810000000, 0x0000020000002000, 0x0000050000200020, 0x0000001000000000,
        0x0000080020000000, 0x0002102000004000, 0x0005000000400040, 0x0008000040000000,
        0x0000200000000000, 0x0010004000000000, 0x0200000000008000, 0x0500000000800080,
        0x0800000080000000, 0x0020400000000000, 0x1000008000000000, 0x0040000000000000,
        0x2000800000000000, 0x4080000000000000, 0x8000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        27 // pixelSearchMask total
    },
    { // x:2 y:1
        0x0000000000000400, 0x0000000000040a04, 0x00000000000a000a, 0x0000000004001100,
        0x000000000a110011, 0x0000000011000000, 0x0000000400002000, 0x0000000a00200020,
        0x0000001120000000, 0x0000040000004000, 0x00000a0000400040, 0x0000002000000000,
        0x0000110040000000, 0x0004204000008000, 0x000a000000800080, 0x0011000080000000,
        0x0000400000000000, 0x0020008000000000, 0x0400000000000000, 0x0a00000000000000,
        0x1100000000000000, 0x0040800000000000, 0x2000000000000000, 0x0080000000000000,
        0x4000000000000000, 0x8000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        26 // pixelSearchMask total
    },
    { // x:3 y:1
        0x0000000000000800, 0x0000000000081408, 0x0000000000140014, 0x0000000008002200,
        0x0000000014220022, 0x0000000022000000, 0x0000000800004100, 0x0000001400410041,
        0x0000002241000000, 0x0000080000008000, 0x0000140000800080, 0x0000004100000000,
        0x0000220080000000, 0x0008418000000000, 0x0014000000000000, 0x0022000000000000,
        0x0000800000000000, 0x0041000000000000, 0x0800000000000000, 0x1400000000000000,
        0x2200000000000000, 0x0080000000000000, 0x4100000000000000, 0x8000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        24 // pixelSearchMask total
    },
    { // x:4 y:1
        0x0000000000001000, 0x0000000000102810, 0x0000000000280028, 0x0000000010004400,
        0x0000000028440044, 0x0000000044000000, 0x0000001000008200, 0x0000002800820082,
        0x0000004482000000, 0x0000100000000100, 0x0000280000010001, 0x0000008200000000,
        0x0000440001000000, 0x0010820100000000, 0x0028000000000000, 0x0044000000000000,
        0x0000010000000000, 0x0082000000000000, 0x1000000000000000, 0x2800000000000000,
        0x4400000000000000, 0x0001000000000000, 0x8200000000000000, 0x0100000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        24 // pixelSearchMask total
    },
    { // x:5 y:1
        0x0000000000002000, 0x0000000000205020, 0x0000000000500050, 0x0000000020008800,
        0x0000000050880088, 0x0000000088000000, 0x0000002000000400, 0x0000005000040004,
        0x0000008804000000, 0x0000200000000200, 0x0000500000020002, 0x0000000400000000,
        0x0000880002000000, 0x0020040200000100, 0x0050000000010001, 0x0088000001000000,
        0x0000020000000000, 0x0004000100000000, 0x2000000000000000, 0x5000000000000000,
        0x8800000000000000, 0x0002010000000000, 0x0400000000000000, 0x0001000000000000,
        0x0200000000000000, 0x0100000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        26 // pixelSearchMask total
    },
    { // x:6 y:1
        0x0000000000004000, 0x000000000040a040, 0x0000000000a000a0, 0x0000000040001000,
        0x00000000a0100010, 0x0000000010000000, 0x0000004000000800, 0x000000a000080008,
        0x0000001008000000, 0x0000400000000400, 0x0000a00000040004, 0x0000000800000000,
        0x0000100004000000, 0x0040080400000200, 0x00a0000000020002, 0x0010000002000000,
        0x0000040000000000, 0x0008000200000000, 0x4000000000000100, 0xa000000000010001,
        0x1000000001000000, 0x0004020000000000, 0x0800000100000000, 0x0002000000000000,
        0x0400010000000000, 0x0201000000000000, 0x0100000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        27 // pixelSearchMask total
    },
    { // x:7 y:1
        0x0000000000008000, 0x0000000000804080, 0x0000000000400040, 0x0000000080002000,
        0x0000000040200020, 0x0000000020000000, 0x0000008000001000, 0x0000004000100010,
        0x0000002010000000, 0x0000800000000800, 0x0000400000080008, 0x0000001000000000,
        0x0000200008000000, 0x0080100800000400, 0x0040000000040004, 0x0020000004000000,
        0x0000080000000000, 0x0010000400000000, 0x8000000000000200, 0x4000000000020002,
        0x2000000002000000, 0x0008040000000000, 0x1000000200000000, 0x0000000000000100,
        0x0004000000010001, 0x0800020000000000, 0x0000000001000000, 0x0000000100000000,
        0x0402000000000000, 0x0000010000000000, 0x0200000000000000, 0x0001000000000000,
        0x0100000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        33 // pixelSearchMask total
    },
    { // x:0 y:2
        0x0000000000010000, 0x0000000001020100, 0x0000000002000200, 0x0000000100040001,
        0x0000000204000402, 0x0000000400000004, 0x0000010000080000, 0x0000020008000800,
        0x0000040800000008, 0x0001000000100000, 0x0002000010001000, 0x0000080000000000,
        0x0004001000000010, 0x0108100000200000, 0x0200000020002000, 0x0400002000000020,
        0x0010000000000000, 0x0800200000000000, 0x0000000000400000, 0x0000000040004000,
        0x0000004000000040, 0x1020000000000000, 0x0000400000000000, 0x0000000000800000,
        0x2000000080008000, 0x0040000000000000, 0x0000008000000080, 0x0000800000000000,
        0x4000000000000000, 0x0080000000000000, 0x8000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        31 // pixelSearchMask total
    },
    { // x:1 y:2
        0x0000000000020000, 0x0000000002050200, 0x0000000005000500, 0x0000000200080002,
        0x0000000508000805, 0x0000000800000008, 0x0000020000100000, 0x0000050010001000,
        0x0000081000000010, 0x0002000000200000, 0x0005000020002000, 0x0000100000000000,
        0x0008002000000020, 0x0210200000400000, 0x0500000040004000, 0x0800004000000040,
        0x0020000000000000, 0x1000400000000000, 0x0000000000800000, 0x0000000080008000,
        0x0000008000000080, 0x2040000000000000, 0x0000800000000000, 0x4000000000000000,
        0x0080000000000000, 0x8000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        26 // pixelSearchMask total
    },
    { // x:2 y:2
        0x0000000000040000, 0x00000000040a0400, 0x000000000a000a00, 0x0000000400110004,
        0x0000000a1100110a, 0x0000001100000011, 0x0000040000200000, 0x00000a0020002000,
        0x0000112000000020, 0x0004000000400000, 0x000a000040004000, 0x0000200000000000,
        0x0011004000000040, 0x0420400000800000, 0x0a00000080008000, 0x1100008000000080,
        0x0040000000000000, 0x2000800000000000, 0x4080000000000000, 0x8000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        20 // pixelSearchMask total
    },
    { // x:3 y:2
        0x0000000000080000, 0x0000000008140800, 0x0000000014001400, 0x0000000800220008,
        0x0000001422002214, 0x0000002200000022, 0x0000080000410000, 0x0000140041004100,
        0x0000224100000041, 0x0008000000800000, 0x0014000080008000, 0x0000410000000000,
        0x0022008000000080, 0x0841800000000000, 0x1400000000000000, 0x2200000000000000,
        0x0080000000000000, 0x4100000000000000, 0x8000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        19 // pixelSearchMask total
    },
    { // x:4 y:2
        0x0000000000100000, 0x0000000010281000, 0x0000000028002800, 0x0000001000440010,
        0x0000002844004428, 0x0000004400000044, 0x0000100000820000, 0x0000280082008200,
        0x0000448200000082, 0x0010000000010000, 0x0028000001000100, 0x0000820000000000,
        0x0044000100000001, 0x1082010000000000, 0x2800000000000000, 0x4400000000000000,
        0x0001000000000000, 0x8200000000000000, 0x0100000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        19 // pixelSearchMask total
    },
    { // x:5 y:2
        0x0000000000200000, 0x0000000020502000, 0x0000000050005000, 0x0000002000880020,
        0x0000005088008850, 0x0000008800000088, 0x0000200000040000, 0x0000500004000400,
        0x0000880400000004, 0x0020000000020000, 0x0050000002000200, 0x0000040000000000,
        0x0088000200000002, 0x2004020000010000, 0x5000000001000100, 0x8800000100000001,
        0x0002000000000000, 0x0400010000000000, 0x0201000000000000, 0x0100000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        20 // pixelSearchMask total
    },
    { // x:6 y:2
        0x0000000000400000, 0x0000000040a04000, 0x00000000a000a000, 0x0000004000100040,
        0x000000a0100010a0, 0x0000001000000010, 0x0000400000080000, 0x0000a00008000800,
        0x0000100800000008, 0x0040000000040000, 0x00a0000004000400, 0x0000080000000000,
        0x0010000400000004, 0x4008040000020000, 0xa000000002000200, 0x1000000200000002,
        0x0004000000000000, 0x0800020000000000, 0x0000000000010000, 0x0000000001000100,
        0x0000000100000001, 0x0402000000000000, 0x0000010000000000, 0x0200000000000000,
        0x0001000000000000, 0x0100000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        26 // pixelSearchMask total
    },
    { // x:7 y:2
        0x0000000000800000, 0x0000000080408000, 0x0000000040004000, 0x0000008000200080,
        0x0000004020002040, 0x0000002000000020, 0x0000800000100000, 0x0000400010001000,
        0x0000201000000010, 0x0080000000080000, 0x0040000008000800, 0x0000100000000000,
        0x0020000800000008, 0x8010080000040000, 0x4000000004000400, 0x2000000400000004,
        0x0008000000000000, 0x1000040000000000, 0x0000000000020000, 0x0000000002000200,
        0x0000000200000002, 0x0804000000000000, 0x0000020000000000, 0x0000000000010000,
        0x0400000001000100, 0x0002000000000000, 0x0000000100000001, 0x0000010000000000,
        0x0200000000000000, 0x0001000000000000, 0x0100000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        31 // pixelSearchMask total
    },
    { // x:0 y:3
        0x0000000001000000, 0x0000000102010000, 0x0000000200020000, 0x0000010004000100,
        0x0000020400040200, 0x0000040000000400, 0x0001000008000001, 0x0002000800080002,
        0x0004080000000804, 0x0100000010000000, 0x0200001000100000, 0x0008000000000008,
        0x0400100000001000, 0x0810000020000010, 0x0000002000200000, 0x0000200000002000,
        0x1000000000000000, 0x0020000000000020, 0x0000000040000000, 0x0000004000400000,
        0x0000400000004000, 0x2000000000000000, 0x0040000000000040, 0x0000000080000000,
        0x0000008000800000, 0x4000000000000000, 0x0000800000008000, 0x0080000000000080,
        0x8000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        29 // pixelSearchMask total
    },
    { // x:1 y:3
        0x0000000002000000, 0x0000000205020000, 0x0000000500050000, 0x0000020008000200,
        0x0000050800080500, 0x0000080000000800, 0x0002000010000002, 0x0005001000100005,
        0x0008100000001008, 0x0200000020000000, 0x0500002000200000, 0x0010000000000010,
        0x0800200000002000, 0x1020000040000020, 0x0000004000400000, 0x0000400000004000,
        0x2000000000000000, 0x0040000000000040, 0x0000000080000000, 0x0000008000800000,
        0x0000800000008000, 0x4000000000000000, 0x0080000000000080, 0x8000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        24 // pixelSearchMask total
    },
    { // x:2 y:3
        0x0000000004000000, 0x000000040a040000, 0x0000000a000a0000, 0x0000040011000400,
        0x00000a1100110a00, 0x0000110000001100, 0x0004000020000004, 0x000a00200020000a,
        0x0011200000002011, 0x0400000040000000, 0x0a00004000400000, 0x0020000000000020,
        0x1100400000004000, 0x2040000080000040, 0x0000008000800000, 0x0000800000008000,
        0x4000000000000000, 0x0080000000000080, 0x8000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        19 // pixelSearchMask total
    },
    { // x:3 y:3
        0x0000000008000000, 0x0000000814080000, 0x0000001400140000, 0x0000080022000800,
        0x0000142200221400, 0x0000220000002200, 0x0008000041000008, 0x0014004100410014,
        0x0022410000004122, 0x0800000080000000, 0x1400008000800000, 0x0041000000000041,
        0x2200800000008000, 0x4180000000000080, 0x8000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        15 // pixelSearchMask total
    },
    { // x:4 y:3
        0x0000000010000000, 0x0000001028100000, 0x0000002800280000, 0x0000100044001000,
        0x0000284400442800, 0x0000440000004400, 0x0010000082000010, 0x0028008200820028,
        0x0044820000008244, 0x1000000001000000, 0x2800000100010000, 0x0082000000000082,
        0x4400010000000100, 0x8201000000000001, 0x0100000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        15 // pixelSearchMask total
    },
    { // x:5 y:3
        0x0000000020000000, 0x0000002050200000, 0x0000005000500000, 0x0000200088002000,
        0x0000508800885000, 0x0000880000008800, 0x0020000004000020, 0x0050000400040050,
        0x0088040000000488, 0x2000000002000000, 0x5000000200020000, 0x0004000000000004,
        0x8800020000000200, 0x0402000001000002, 0x0000000100010000, 0x0000010000000100,
        0x0200000000000000, 0x0001000000000001, 0x0100000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        19 // pixelSearchMask total
    },
    { // x:6 y:3
        0x0000000040000000, 0x00000040a0400000, 0x000000a000a00000, 0x0000400010004000,
        0x0000a0100010a000, 0x0000100000001000, 0x0040000008000040, 0x00a00008000800a0,
        0x0010080000000810, 0x4000000004000000, 0xa000000400040000, 0x0008000000000008,
        0x1000040000000400, 0x0804000002000004, 0x0000000200020000, 0x0000020000000200,
        0x0400000000000000, 0x0002000000000002, 0x0000000001000000, 0x0000000100010000,
        0x0000010000000100, 0x0200000000000000, 0x0001000000000001, 0x0100000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        24 // pixelSearchMask total
    },
    { // x:7 y:3
        0x0000000080000000, 0x0000008040800000, 0x0000004000400000, 0x0000800020008000,
        0x0000402000204000, 0x0000200000002000, 0x0080000010000080, 0x0040001000100040,
        0x0020100000001020, 0x8000000008000000, 0x4000000800080000, 0x0010000000000010,
        0x2000080000000800, 0x1008000004000008, 0x0000000400040000, 0x0000040000000400,
        0x0800000000000000, 0x0004000000000004, 0x0000000002000000, 0x0000000200020000,
        0x0000020000000200, 0x0400000000000000, 0x0002000000000002, 0x0000000001000000,
        0x0000000100010000, 0x0200000000000000, 0x0000010000000100, 0x0001000000000001,
        0x0100000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        29 // pixelSearchMask total
    },
    { // x:0 y:4
        0x0000000100000000, 0x0000010201000000, 0x0000020002000000, 0x0001000400010000,
        0x0002040004020000, 0x0004000000040000, 0x0100000800000100, 0x0200080008000200,
        0x0408000000080400, 0x0000001000000001, 0x0000100010000002, 0x0800000000000800,
        0x0010000000100004, 0x1000002000001008, 0x0000200020000000, 0x0020000000200000,
        0x0000000000000010, 0x2000000000002000, 0x0000004000000000, 0x0000400040000000,
        0x0040000000400000, 0x0000000000000020, 0x4000000000004000, 0x0000008000000000,
        0x0000800080000000, 0x0000000000000040, 0x0080000000800000, 0x8000000000008000,
        0x0000000000000080, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        29 // pixelSearchMask total
    },
    { // x:1 y:4
        0x0000000200000000, 0x0000020502000000, 0x0000050005000000, 0x0002000800020000,
        0x0005080008050000, 0x0008000000080000, 0x0200001000000200, 0x0500100010000500,
        0x0810000000100800, 0x0000002000000002, 0x0000200020000005, 0x1000000000001000,
        0x0020000000200008, 0x2000004000002010, 0x0000400040000000, 0x0040000000400000,
        0x0000000000000020, 0x4000000000004000, 0x0000008000000000, 0x0000800080000000,
        0x0080000000800000, 0x0000000000000040, 0x8000000000008000, 0x0000000000000080,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        24 // pixelSearchMask total
    },
    { // x:2 y:4
        0x0000000400000000, 0x0000040a04000000, 0x00000a000a000000, 0x0004001100040000,
        0x000a1100110a0000, 0x0011000000110000, 0x0400002000000400, 0x0a00200020000a00,
        0x1120000000201100, 0x0000004000000004, 0x000040004000000a, 0x2000000000002000,
        0x0040000000400011, 0x4000008000004020, 0x0000800080000000, 0x0080000000800000,
        0x0000000000000040, 0x8000000000008000, 0x0000000000000080, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        19 // pixelSearchMask total
    },
    { // x:3 y:4
        0x0000000800000000, 0x0000081408000000, 0x0000140014000000, 0x0008002200080000,
        0x0014220022140000, 0x0022000000220000, 0x0800004100000800, 0x1400410041001400,
        0x2241000000412200, 0x0000008000000008, 0x0000800080000014, 0x4100000000004100,
        0x0080000000800022, 0x8000000000008041, 0x0000000000000080, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        15 // pixelSearchMask total
    },
    { // x:4 y:4
        0x0000001000000000, 0x0000102810000000, 0x0000280028000000, 0x0010004400100000,
        0x0028440044280000, 0x0044000000440000, 0x1000008200001000, 0x2800820082002800,
        0x4482000000824400, 0x0000000100000010, 0x0000010001000028, 0x8200000000008200,
        0x0001000000010044, 0x0100000000000182, 0x0000000000000001, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        15 // pixelSearchMask total
    },
    { // x:5 y:4
        0x0000002000000000, 0x0000205020000000, 0x0000500050000000, 0x0020008800200000,
        0x0050880088500000, 0x0088000000880000, 0x2000000400002000, 0x5000040004005000,
        0x8804000000048800, 0x0000000200000020, 0x0000020002000050, 0x0400000000000400,
        0x0002000000020088, 0x0200000100000204, 0x0000010001000000, 0x0001000000010000,
        0x0000000000000002, 0x0100000000000100, 0x0000000000000001, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        19 // pixelSearchMask total
    },
    { // x:6 y:4
        0x0000004000000000, 0x000040a040000000, 0x0000a000a0000000, 0x0040001000400000,
        0x00a0100010a00000, 0x0010000000100000, 0x4000000800004000, 0xa00008000800a000,
        0x1008000000081000, 0x0000000400000040, 0x00000400040000a0, 0x0800000000000800,
        0x0004000000040010, 0x0400000200000408, 0x0000020002000000, 0x0002000000020000,
        0x0000000000000004, 0x0200000000000200, 0x0000000100000000, 0x0000010001000000,
        0x0001000000010000, 0x0000000000000002, 0x0100000000000100, 0x0000000000000001,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        24 // pixelSearchMask total
    },
    { // x:7 y:4
        0x0000008000000000, 0x0000804080000000, 0x0000400040000000, 0x0080002000800000,
        0x0040200020400000, 0x0020000000200000, 0x8000001000008000, 0x4000100010004000,
        0x2010000000102000, 0x0000000800000080, 0x0000080008000040, 0x1000000000001000,
        0x0008000000080020, 0x0800000400000810, 0x0000040004000000, 0x0004000000040000,
        0x0000000000000008, 0x0400000000000400, 0x0000000200000000, 0x0000020002000000,
        0x0002000000020000, 0x0000000000000004, 0x0200000000000200, 0x0000000100000000,
        0x0000010001000000, 0x0000000000000002, 0x0001000000010000, 0x0100000000000100,
        0x0000000000000001, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        29 // pixelSearchMask total
    },
    { // x:0 y:5
        0x0000010000000000, 0x0001020100000000, 0x0002000200000000, 0x0100040001000000,
        0x0204000402000000, 0x0400000004000000, 0x0000080000010000, 0x0008000800020000,
        0x0800000008040000, 0x0000100000000100, 0x0010001000000200, 0x0000000000080000,
        0x1000000010000400, 0x0000200000100801, 0x0020002000000002, 0x2000000020000004,
        0x0000000000001000, 0x0000000000200008, 0x0000400000000000, 0x0040004000000000,
        0x4000000040000000, 0x0000000000002010, 0x0000000000400000, 0x0000800000000000,
        0x0080008000000020, 0x0000000000004000, 0x8000000080000000, 0x0000000000800000,
        0x0000000000000040, 0x0000000000008000, 0x0000000000000080, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        31 // pixelSearchMask total
    },
    { // x:1 y:5
        0x0000020000000000, 0x0002050200000000, 0x0005000500000000, 0x0200080002000000,
        0x0508000805000000, 0x0800000008000000, 0x0000100000020000, 0x0010001000050000,
        0x1000000010080000, 0x0000200000000200, 0x0020002000000500, 0x0000000000100000,
        0x2000000020000800, 0x0000400000201002, 0x0040004000000005, 0x4000000040000008,
        0x0000000000002000, 0x0000000000400010, 0x0000800000000000, 0x0080008000000000,
        0x8000000080000000, 0x0000000000004020, 0x0000000000800000, 0x0000000000000040,
        0x0000000000008000, 0x0000000000000080, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        26 // pixelSearchMask total
    },
    { // x:2 y:5
        0x0000040000000000, 0x00040a0400000000, 0x000a000a00000000, 0x0400110004000000,
        0x0a1100110a000000, 0x1100000011000000, 0x0000200000040000, 0x00200020000a0000,
        0x2000000020110000, 0x0000400000000400, 0x0040004000000a00, 0x0000000000200000,
        0x4000000040001100, 0x0000800000402004, 0x008000800000000a, 0x8000000080000011,
        0x0000000000004000, 0x0000000000800020, 0x0000000000008040, 0x0000000000000080,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        20 // pixelSearchMask total
    },
    { // x:3 y:5
        0x0000080000000000, 0x0008140800000000, 0x0014001400000000, 0x0800220008000000,
        0x1422002214000000, 0x2200000022000000, 0x0000410000080000, 0x0041004100140000,
        0x4100000041220000, 0x0000800000000800, 0x0080008000001400, 0x0000000000410000,
        0x8000000080002200, 0x0000000000804108, 0x0000000000000014, 0x0000000000000022,
        0x0000000000008000, 0x0000000000000041, 0x0000000000000080, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        19 // pixelSearchMask total
    },
    { // x:4 y:5
        0x0000100000000000, 0x0010281000000000, 0x0028002800000000, 0x1000440010000000,
        0x2844004428000000, 0x4400000044000000, 0x0000820000100000, 0x0082008200280000,
        0x8200000082440000, 0x0000010000001000, 0x0001000100002800, 0x0000000000820000,
        0x0100000001004400, 0x0000000000018210, 0x0000000000000028, 0x0000000000000044,
        0x0000000000000100, 0x0000000000000082, 0x0000000000000001, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        19 // pixelSearchMask total
    },
    { // x:5 y:5
        0x0000200000000000, 0x0020502000000000, 0x0050005000000000, 0x2000880020000000,
        0x5088008850000000, 0x8800000088000000, 0x0000040000200000, 0x0004000400500000,
        0x0400000004880000, 0x0000020000002000, 0x0002000200005000, 0x0000000000040000,
        0x0200000002008800, 0x0000010000020420, 0x0001000100000050, 0x0100000001000088,
        0x0000000000000200, 0x0000000000010004, 0x0000000000000102, 0x0000000000000001,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        20 // pixelSearchMask total
    },
    { // x:6 y:5
        0x0000400000000000, 0x0040a04000000000, 0x00a000a000000000, 0x4000100040000000,
        0xa0100010a0000000, 0x1000000010000000, 0x0000080000400000, 0x0008000800a00000,
        0x0800000008100000, 0x0000040000004000, 0x000400040000a000, 0x0000000000080000,
        0x0400000004001000, 0x0000020000040840, 0x00020002000000a0, 0x0200000002000010,
        0x0000000000000400, 0x0000000000020008, 0x0000010000000000, 0x0001000100000000,
        0x0100000001000000, 0x0000000000000204, 0x0000000000010000, 0x0000000000000002,
        0x0000000000000100, 0x0000000000000001, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        26 // pixelSearchMask total
    },
    { // x:7 y:5
        0x0000800000000000, 0x0080408000000000, 0x0040004000000000, 0x8000200080000000,
        0x4020002040000000, 0x2000000020000000, 0x0000100000800000, 0x0010001000400000,
        0x1000000010200000, 0x0000080000008000, 0x0008000800004000, 0x0000000000100000,
        0x0800000008002000, 0x0000040000081080, 0x0004000400000040, 0x0400000004000020,
        0x0000000000000800, 0x0000000000040010, 0x0000020000000000, 0x0002000200000000,
        0x0200000002000000, 0x0000000000000408, 0x0000000000020000, 0x0000010000000000,
        0x0001000100000004, 0x0000000000000200, 0x0100000001000000, 0x0000000000010000,
        0x0000000000000002, 0x0000000000000100, 0x0000000000000001, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        31 // pixelSearchMask total
    },
    { // x:0 y:6
        0x0001000000000000, 0x0102010000000000, 0x0200020000000000, 0x0004000100000000,
        0x0400040200000000, 0x0000000400000000, 0x0008000001000000, 0x0800080002000000,
        0x0000000804000000, 0x0010000000010000, 0x1000100000020000, 0x0000000008000000,
        0x0000001000040000, 0x0020000010080100, 0x2000200000000200, 0x0000002000000400,
        0x0000000000100000, 0x0000000020000800, 0x0040000000000001, 0x4000400000000002,
        0x0000004000000004, 0x0000000000201000, 0x0000000040000008, 0x0080000000000000,
        0x8000800000002000, 0x0000000000400010, 0x0000008000000000, 0x0000000080000000,
        0x0000000000004020, 0x0000000000800000, 0x0000000000000040, 0x0000000000008000,
        0x0000000000000080, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        33 // pixelSearchMask total
    },
    { // x:1 y:6
        0x0002000000000000, 0x0205020000000000, 0x0500050000000000, 0x0008000200000000,
        0x0800080500000000, 0x0000000800000000, 0x0010000002000000, 0x1000100005000000,
        0x0000001008000000, 0x0020000000020000, 0x2000200000050000, 0x0000000010000000,
        0x0000002000080000, 0x0040000020100200, 0x4000400000000500, 0x0000004000000800,
        0x0000000000200000, 0x0000000040001000, 0x0080000000000002, 0x8000800000000005,
        0x0000008000000008, 0x0000000000402000, 0x0000000080000010, 0x0000000000004000,
        0x0000000000800020, 0x0000000000008040, 0x0000000000000080, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        27 // pixelSearchMask total
    },
    { // x:2 y:6
        0x0004000000000000, 0x040a040000000000, 0x0a000a0000000000, 0x0011000400000000,
        0x1100110a00000000, 0x0000001100000000, 0x0020000004000000, 0x200020000a000000,
        0x0000002011000000, 0x0040000000040000, 0x40004000000a0000, 0x0000000020000000,
        0x0000004000110000, 0x0080000040200400, 0x8000800000000a00, 0x0000008000001100,
        0x0000000000400000, 0x0000000080002000, 0x0000000000000004, 0x000000000000000a,
        0x0000000000000011, 0x0000000000804000, 0x0000000000000020, 0x0000000000008000,
        0x0000000000000040, 0x0000000000000080, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        26 // pixelSearchMask total
    },
    { // x:3 y:6
        0x0008000000000000, 0x0814080000000000, 0x1400140000000000, 0x0022000800000000,
        0x2200221400000000, 0x0000002200000000, 0x0041000008000000, 0x4100410014000000,
        0x0000004122000000, 0x0080000000080000, 0x8000800000140000, 0x0000000041000000,
        0x0000008000220000, 0x0000000080410800, 0x0000000000001400, 0x0000000000002200,
        0x0000000000800000, 0x0000000000004100, 0x0000000000000008, 0x0000000000000014,
        0x0000000000000022, 0x0000000000008000, 0x0000000000000041, 0x0000000000000080,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        24 // pixelSearchMask total
    },
    { // x:4 y:6
        0x0010000000000000, 0x1028100000000000, 0x2800280000000000, 0x0044001000000000,
        0x4400442800000000, 0x0000004400000000, 0x0082000010000000, 0x8200820028000000,
        0x0000008244000000, 0x0001000000100000, 0x0100010000280000, 0x0000000082000000,
        0x0000000100440000, 0x0000000001821000, 0x0000000000002800, 0x0000000000004400,
        0x0000000000010000, 0x0000000000008200, 0x0000000000000010, 0x0000000000000028,
        0x0000000000000044, 0x0000000000000100, 0x0000000000000082, 0x0000000000000001,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        24 // pixelSearchMask total
    },
    { // x:5 y:6
        0x0020000000000000, 0x2050200000000000, 0x5000500000000000, 0x0088002000000000,
        0x8800885000000000, 0x0000008800000000, 0x0004000020000000, 0x0400040050000000,
        0x0000000488000000, 0x0002000000200000, 0x0200020000500000, 0x0000000004000000,
        0x0000000200880000, 0x0001000002042000, 0x0100010000005000, 0x0000000100008800,
        0x0000000000020000, 0x0000000001000400, 0x0000000000000020, 0x0000000000000050,
        0x0000000000000088, 0x0000000000010200, 0x0000000000000004, 0x0000000000000100,
        0x0000000000000002, 0x0000000000000001, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        26 // pixelSearchMask total
    },
    { // x:6 y:6
        0x0040000000000000, 0x40a0400000000000, 0xa000a00000000000, 0x0010004000000000,
        0x100010a000000000, 0x0000001000000000, 0x0008000040000000, 0x08000800a0000000,
        0x0000000810000000, 0x0004000000400000, 0x0400040000a00000, 0x0000000008000000,
        0x0000000400100000, 0x0002000004084000, 0x020002000000a000, 0x0000000200001000,
        0x0000000000040000, 0x0000000002000800, 0x0001000000000040, 0x01000100000000a0,
        0x0000000100000010, 0x0000000000020400, 0x0000000001000008, 0x0000000000000200,
        0x0000000000010004, 0x0000000000000102, 0x0000000000000001, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        27 // pixelSearchMask total
    },
    { // x:7 y:6
        0x0080000000000000, 0x8040800000000000, 0x4000400000000000, 0x0020008000000000,
        0x2000204000000000, 0x0000002000000000, 0x0010000080000000, 0x1000100040000000,
        0x0000001020000000, 0x0008000000800000, 0x0800080000400000, 0x0000000010000000,
        0x0000000800200000, 0x0004000008108000, 0x0400040000004000, 0x0000000400002000,
        0x0000000000080000, 0x0000000004001000, 0x0002000000000080, 0x0200020000000040,
        0x0000000200000020, 0x0000000000040800, 0x0000000002000010, 0x0001000000000000,
        0x0100010000000400, 0x0000000000020008, 0x0000000100000000, 0x0000000001000000,
        0x0000000000000204, 0x0000000000010000, 0x0000000000000002, 0x0000000000000100,
        0x0000000000000001, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        33 // pixelSearchMask total
    },
    { // x:0 y:7
        0x0100000000000000, 0x0201000000000000, 0x0002000000000000, 0x0400010000000000,
        0x0004020000000000, 0x0000040000000000, 0x0800000100000000, 0x0008000200000000,
        0x0000080400000000, 0x1000000001000000, 0x0010000002000000, 0x0000000800000000,
        0x0000100004000000, 0x2000001008010000, 0x0020000000020000, 0x0000200000040000,
        0x0000000010000000, 0x0000002000080000, 0x4000000000000100, 0x0040000000000200,
        0x0000400000000400, 0x0000000020100000, 0x0000004000000800, 0x8000000000000001,
        0x0080000000200002, 0x0000000040001000, 0x0000800000000004, 0x0000008000000008,
        0x0000000000402000, 0x0000000080000010, 0x0000000000004000, 0x0000000000800020,
        0x0000000000008040, 0x0000000000000080, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        34 // pixelSearchMask total
    },
    { // x:1 y:7
        0x0200000000000000, 0x0502000000000000, 0x0005000000000000, 0x0800020000000000,
        0x0008050000000000, 0x0000080000000000, 0x1000000200000000, 0x0010000500000000,
        0x0000100800000000, 0x2000000002000000, 0x0020000005000000, 0x0000001000000000,
        0x0000200008000000, 0x4000002010020000, 0x0040000000050000, 0x0000400000080000,
        0x0000000020000000, 0x0000004000100000, 0x8000000000000200, 0x0080000000000500,
        0x0000800000000800, 0x0000000040200000, 0x0000008000001000, 0x0000000000000002,
        0x0000000000400005, 0x0000000080002000, 0x0000000000000008, 0x0000000000000010,
        0x0000000000804000, 0x0000000000000020, 0x0000000000008000, 0x0000000000000040,
        0x0000000000000080, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        33 // pixelSearchMask total
    },
    { // x:2 y:7
        0x0400000000000000, 0x0a04000000000000, 0x000a000000000000, 0x1100040000000000,
        0x00110a0000000000, 0x0000110000000000, 0x2000000400000000, 0x0020000a00000000,
        0x0000201100000000, 0x4000000004000000, 0x004000000a000000, 0x0000002000000000,
        0x0000400011000000, 0x8000004020040000, 0x00800000000a0000, 0x0000800000110000,
        0x0000000040000000, 0x0000008000200000, 0x0000000000000400, 0x0000000000000a00,
        0x0000000000001100, 0x0000000080400000, 0x0000000000002000, 0x0000000000000004,
        0x000000000080000a, 0x0000000000004000, 0x0000000000000011, 0x0000000000000020,
        0x0000000000008000, 0x0000000000000040, 0x0000000000000080, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        31 // pixelSearchMask total
    },
    { // x:3 y:7
        0x0800000000000000, 0x1408000000000000, 0x0014000000000000, 0x2200080000000000,
        0x0022140000000000, 0x0000220000000000, 0x4100000800000000, 0x0041001400000000,
        0x0000412200000000, 0x8000000008000000, 0x0080000014000000, 0x0000004100000000,
        0x0000800022000000, 0x0000008041080000, 0x0000000000140000, 0x0000000000220000,
        0x0000000080000000, 0x0000000000410000, 0x0000000000000800, 0x0000000000001400,
        0x0000000000002200, 0x0000000000800000, 0x0000000000004100, 0x0000000000000008,
        0x0000000000000014, 0x0000000000008000, 0x0000000000000022, 0x0000000000000041,
        0x0000000000000080, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        29 // pixelSearchMask total
    },
    { // x:4 y:7
        0x1000000000000000, 0x2810000000000000, 0x0028000000000000, 0x4400100000000000,
        0x0044280000000000, 0x0000440000000000, 0x8200001000000000, 0x0082002800000000,
        0x0000824400000000, 0x0100000010000000, 0x0001000028000000, 0x0000008200000000,
        0x0000010044000000, 0x0000000182100000, 0x0000000000280000, 0x0000000000440000,
        0x0000000001000000, 0x0000000000820000, 0x0000000000001000, 0x0000000000002800,
        0x0000000000004400, 0x0000000000010000, 0x0000000000008200, 0x0000000000000010,
        0x0000000000000028, 0x0000000000000100, 0x0000000000000044, 0x0000000000000082,
        0x0000000000000001, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        29 // pixelSearchMask total
    },
    { // x:5 y:7
        0x2000000000000000, 0x5020000000000000, 0x0050000000000000, 0x8800200000000000,
        0x0088500000000000, 0x0000880000000000, 0x0400002000000000, 0x0004005000000000,
        0x0000048800000000, 0x0200000020000000, 0x0002000050000000, 0x0000000400000000,
        0x0000020088000000, 0x0100000204200000, 0x0001000000500000, 0x0000010000880000,
        0x0000000002000000, 0x0000000100040000, 0x0000000000002000, 0x0000000000005000,
        0x0000000000008800, 0x0000000001020000, 0x0000000000000400, 0x0000000000000020,
        0x0000000000010050, 0x0000000000000200, 0x0000000000000088, 0x0000000000000004,
        0x0000000000000100, 0x0000000000000002, 0x0000000000000001, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        31 // pixelSearchMask total
    },
    { // x:6 y:7
        0x4000000000000000, 0xa040000000000000, 0x00a0000000000000, 0x1000400000000000,
        0x0010a00000000000, 0x0000100000000000, 0x0800004000000000, 0x000800a000000000,
        0x0000081000000000, 0x0400000040000000, 0x00040000a0000000, 0x0000000800000000,
        0x0000040010000000, 0x0200000408400000, 0x0002000000a00000, 0x0000020000100000,
        0x0000000004000000, 0x0000000200080000, 0x0100000000004000, 0x000100000000a000,
        0x0000010000001000, 0x0000000002040000, 0x0000000100000800, 0x0000000000000040,
        0x00000000000200a0, 0x0000000001000400, 0x0000000000000010, 0x0000000000000008,
        0x0000000000010200, 0x0000000000000004, 0x0000000000000100, 0x0000000000000002,
        0x0000000000000001, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        33 // pixelSearchMask total
    },
    { // x:7 y:7
        0x8000000000000000, 0x4080000000000000, 0x0040000000000000, 0x2000800000000000,
        0x0020400000000000, 0x0000200000000000, 0x1000008000000000, 0x0010004000000000,
        0x0000102000000000, 0x0800000080000000, 0x0008000040000000, 0x0000001000000000,
        0x0000080020000000, 0x0400000810800000, 0x0004000000400000, 0x0000040000200000,
        0x0000000008000000, 0x0000000400100000, 0x0200000000008000, 0x0002000000004000,
        0x0000020000002000, 0x0000000004080000, 0x0000000200001000, 0x0100000000000080,
        0x0001000000040040, 0x0000000002000800, 0x0000010000000020, 0x0000000100000010,
        0x0000000000020400, 0x0000000001000008, 0x0000000000000200, 0x0000000000010004,
        0x0000000000000102, 0x0000000000000001, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        34 // pixelSearchMask total
    }
};

//==============================================================================
//==============================================================================

std::string
TileExtrapolationPix::show(const std::string &hd) const
{
    std::ostringstream ostr;
    ostr << hd << "pix(" << std::setw(2) << mId
         << ":xy(" << std::setw(1) << (mId & 7) << ',' << std::setw(1) << (mId >> 3) << "),"
         << std::setw(2) << mDistanceSquared << ')';
    return ostr.str();
}

//------------------------------------------------------------------------------

std::string
TileExtrapolationTile::makePrecomputeMaskTableCppHeader()
{
    std::vector<uint64_t> maskTbl;

    // static unsigned maxMask = 34; // This is maximum active mask total @ corner of tile (i.e., (0,0) (0,7), (7,0), (7,7))
    static unsigned maxMask = 40; // We need some extra in order to avoid table overrun access for bundle(~8) mask logic.

    std::ostringstream ostr;
    ostr << "static const uint64_t pixelSearchMaskTotalId = " << maxMask << ";\n";
    ostr << "static uint64_t pixelSearchMask[64][pixelSearchMaskTotalId + 1] = {\n";
    for (unsigned y = 0; y < 8; ++y) {
        for (unsigned x = 0; x < 8; ++x) {

            calcPrecomputeMaskTablePixel(x, y, maskTbl);

            ostr << "    { // x:" << x << " y:" << y << '\n';
            for (unsigned i = 0; i < maxMask; ++i) {
                if (i % 4 == 0) ostr << "        ";
                if (i < maskTbl.size()) {
                    ostr << "0x" << std::hex << std::setw(16) << std::setfill('0') << maskTbl[i] << ", ";
                } else {
                    ostr << "0x0000000000000000, ";
                }
                if (i % 4 == 3) ostr << '\n';
            }
            if (maxMask % 4 != 0) ostr << '\n';
            ostr << "        " << std::dec << maskTbl.size() << " // pixelSearchMask total\n";
            ostr << "    }";
            if (x * y == 49) ostr << '\n';
            else ostr << ",\n";
        } // x
    } // y
    ostr << "};";

    return ostr.str();
}

void
TileExtrapolationTile::calcPrecomputeMaskTablePixel(const unsigned x, const unsigned y, std::vector<uint64_t> &maskTbl)
{
    //
    // reset all working memory
    //
    initPixels();
    resetDistanceSquared(); // just in case reset distanceSquared value
    for (unsigned yy = 0; yy < 8; ++yy) {
        for (unsigned xx = 0; xx < 8; ++xx) {
            mPixels[pixId(xx, yy)].setDistanceSquared((xx - x) * (xx - x) + (yy - y) * (yy - y));
        } // xx
    } // yy

    //
    // sort pixels by distance from current pixel
    //
    std::sort(mPixels.begin(), mPixels.end(), [](TileExtrapolationPix a, TileExtrapolationPix b) {
            return (a.getDistanceSquared() < b.getDistanceSquared());
        });

    //
    // generate mask
    //
    maskTbl.clear();

    unsigned iStart = 0;
    unsigned currDistanceSquared = 0;
    for (unsigned int i = 0; i < 65; ++i) {
        if (i < 64 && mPixels[i].getDistanceSquared() <= currDistanceSquared) continue;

        uint64_t currMask = 0x0;
        for (unsigned int j = iStart; j < i; ++j) {
            currMask |= (static_cast<uint64_t>(0x1) << mPixels[j].getId());
        }
        maskTbl.push_back(currMask);

        iStart = i;
        currDistanceSquared = mPixels[i].getDistanceSquared();
    }
}

std::string
TileExtrapolationTile::showPixels(const std::string &hd) const
{
    std::ostringstream ostr;

    ostr << hd << "mPixels {\n";
    for (unsigned i = 0; i < 64; ++i) {
        ostr << hd << "  i:" << std::setw(2) << i << " " << mPixels[i].show("") << '\n';
    }
    ostr << hd << "}";
    return ostr.str();
}

//==============================================================================
//==============================================================================

std::string
TileExtrapolationPhase::show(const std::string &hd) const
{
    std::ostringstream ostr;

    ostr << hd << "extrapolationPhase {\n";
    ostr << hd << "  mStartMask:" << mStartMaskId << " mEndMask:" << mEndMaskId << '\n';
    ostr << hd << "  mPhaseMask {\n";
    ostr << TileExtrapolation::showMask(hd + "    ", mPhaseMask) << '\n';
    ostr << hd << "  }\n";
    ostr << hd << "}";
    return ostr.str();
}

void
TileExtrapolationPhaseManager::init(const int pixId, const int bundleMaskTotal)
//
// Create bundle phase one by one based on bundleMaskTotal.
// Actually mEndMaskId is not used so far by main logic but keep them because it's useful for debug.
//
{
    mPixId = pixId;
    mBundleMaskTotal = bundleMaskTotal;

    int maskTotal = pixelSearchMask[pixId][pixelSearchMaskTotalId];
    for (int maskId = 0; maskId < maskTotal; maskId += mBundleMaskTotal) {
        TileExtrapolationPhase currPhase;
        currPhase.mStartMaskId = -1;
        currPhase.mPhaseMask = static_cast<uint64_t>(0x0);
        for (int i = 0; i < mBundleMaskTotal; ++i) {
            int currMaskId = maskId + i;
            if (currMaskId < maskTotal) {
                if (currPhase.mStartMaskId < 0) {
                    currPhase.mStartMaskId = currMaskId;
                    currPhase.mEndMaskId = currMaskId;
                } else {
                    currPhase.mEndMaskId = currMaskId;
                }
                currPhase.mPhaseMask |= pixelSearchMask[pixId][currMaskId];
            }
        }
        if (currPhase.mStartMaskId == -1) {
            break;              // empty phase
        }
        mPhases.push_back(currPhase);
    }
}

std::string
TileExtrapolationPhaseManager::show(const std::string &hd) const
{
    std::ostringstream ostr;

    ostr << hd << "extrapolationPhaseManager {\n";
    ostr << hd << "  mPixId:" << mPixId << '\n';
    ostr << hd << "  mBundleMaskTotal:" << mBundleMaskTotal << '\n';
    ostr << hd << "  mPhases (total:" << mPhases.size() << ") {\n";
    for (size_t i = 0; i < mPhases.size(); ++i) {
        ostr << hd << "    i:" << i << '\n';
        ostr << hd << mPhases[i].show(hd + "    ") << '\n';
    }
    ostr << hd << "  }\n";
    ostr << hd << "}";
    return ostr.str();
}

//==============================================================================

TileExtrapolation::TileExtrapolation()
{
    //
    // pre-generaate phaseManager for bundle mask total from 2 ~ 8 just in case.
    // Currently we only use 2 ~ 3 for final logic. However it might be changed on future
    // hardware.
    //
    for (int pixId = 0; pixId < 64; ++pixId) {
        mExtrapolationPhaseManager_bundle2[pixId].init(pixId, 2);
        mExtrapolationPhaseManager_bundle3[pixId].init(pixId, 3);
        mExtrapolationPhaseManager_bundle4[pixId].init(pixId, 4);
        mExtrapolationPhaseManager_bundle5[pixId].init(pixId, 5);
        mExtrapolationPhaseManager_bundle6[pixId].init(pixId, 6);
        mExtrapolationPhaseManager_bundle7[pixId].init(pixId, 7);
        mExtrapolationPhaseManager_bundle8[pixId].init(pixId, 8);
    }
}

std::string
TileExtrapolation::showMask(const std::string &hd, const uint64_t mask)
{
    std::ostringstream ostr;

    ostr << hd << "mask 0x" << std::setw(16) << std::setfill('0') << std::hex << mask << " {\n";
    for (int y = 7; y >= 0; --y) {
        ostr << hd << "  ";
        for (int x = 0; x < 8; ++x) {
            if (mask & (static_cast<uint64_t>(0x1) << ((y << 3) + x))) {
                // ostr << "* ";
                ostr << std::setw(2) << std::oct << ((y << 3) + x) << ' ';
            } else {
                // ostr << ". ";
                ostr << " . ";
            }
        }
        ostr << '\n';
    }
    ostr << hd << "}";
    return ostr.str();
}

std::string
TileExtrapolation::showPixIdArray(const std::string &hd, const int extrapolatePixIdArray[64])
{
    std::ostringstream ostr;

    ostr << hd << "extrapolatePixIdArray {\n";
    for (int y = 7; y >= 0; --y) {
        ostr << hd << "  ";
        for (int x = 0; x < 8; ++x) {
            int currPixId = extrapolatePixIdArray[(y << 3) + x];
            ostr << std::setw(2) << std::oct << currPixId << ' ';
        }
        ostr << '\n';
    }
    ostr << hd << "}";
    return ostr.str();
}

const TileExtrapolationPhaseManager &
TileExtrapolation::getPhaseManager(const int maskBundleTotal, const int pixId) const // for debug
{
    switch (maskBundleTotal) {
    case 0 :
    case 1 : break;
    case 2 : return mExtrapolationPhaseManager_bundle2[pixId];
    case 3 : return mExtrapolationPhaseManager_bundle3[pixId];
    case 4 : return mExtrapolationPhaseManager_bundle4[pixId];
    case 5 : return mExtrapolationPhaseManager_bundle5[pixId];
    case 6 : return mExtrapolationPhaseManager_bundle6[pixId];
    case 7 : return mExtrapolationPhaseManager_bundle7[pixId];
    case 8 : return mExtrapolationPhaseManager_bundle8[pixId];
    }

    // no bundle phase manager for bundleTotal <= 1.
    return mExtrapolationPhaseManager_bundle2[pixId]; // useless return val.
}

// static function
uint64_t
TileExtrapolation::getPixelSearchMask(const int x, const int y, const int maskId) // for debug
{
    return pixelSearchMask[(y << 3) + x][maskId];
}

int
TileExtrapolation::searchActiveNearestPixelMain_maskBundle1(const uint64_t activePixelMask, const unsigned pixId) const
//
// very naive loop over all masks one by one
//
{
    uint64_t maskTotal = pixelSearchMask[pixId][pixelSearchMaskTotalId];
    for (uint64_t i = 0; i < maskTotal; ++i) {
        uint64_t currActivePixelMask = activePixelMask & pixelSearchMask[pixId][i];
        if (currActivePixelMask) {
            // Try to get most right active bit and get it's position. This bit position is pixId of active pixel.
            return countRightZeroBit(currActivePixelMask);
        }
    }
    return -1;                  // no active pixels
}

int
TileExtrapolation::searchActiveNearestPixelMain_maskBundle2(const uint64_t activePixelMask, const unsigned pixId) const
{
    return mExtrapolationPhaseManager_bundle2[pixId].search_maskBundle2(activePixelMask, pixelSearchMask[pixId]);
}

int
TileExtrapolation::searchActiveNearestPixelMain_maskBundle3(const uint64_t activePixelMask, const unsigned pixId) const
{
    return mExtrapolationPhaseManager_bundle3[pixId].search_maskBundle3(activePixelMask, pixelSearchMask[pixId]);
}

int
TileExtrapolation::searchActiveNearestPixelMain_maskBundle4(const uint64_t activePixelMask, const unsigned pixId) const
{
    return mExtrapolationPhaseManager_bundle4[pixId].search_maskBundle4(activePixelMask, pixelSearchMask[pixId]);
}

int
TileExtrapolation::searchActiveNearestPixelMain_maskBundle5(const uint64_t activePixelMask, const unsigned pixId) const
{
    return mExtrapolationPhaseManager_bundle5[pixId].search_maskBundle5(activePixelMask, pixelSearchMask[pixId]);
}

int
TileExtrapolation::searchActiveNearestPixelMain_maskBundle6(const uint64_t activePixelMask, const unsigned pixId) const
{
    return mExtrapolationPhaseManager_bundle6[pixId].search_maskBundle6(activePixelMask, pixelSearchMask[pixId]);
}

int
TileExtrapolation::searchActiveNearestPixelMain_maskBundle7(const uint64_t activePixelMask, const unsigned pixId) const
{
    return mExtrapolationPhaseManager_bundle7[pixId].search_maskBundle7(activePixelMask, pixelSearchMask[pixId]);
}

int
TileExtrapolation::searchActiveNearestPixelMain_maskBundle8(const uint64_t activePixelMask, const unsigned pixId) const
{
    return mExtrapolationPhaseManager_bundle8[pixId].search_maskBundle8(activePixelMask, pixelSearchMask[pixId]);
}

} // namespace fb_util
} // namespace scene_rdl2

